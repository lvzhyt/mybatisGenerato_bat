<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tg.citySite.dao.ItemAttrValueMapper" >
  <resultMap id="BaseResultMap" type="com.tg.citySite.model.ItemAttrValue" >
    <id column="value_id" property="valueId" jdbcType="BIGINT" />
    <result column="value_name" property="valueName" jdbcType="VARCHAR" />
    <result column="attr_id" property="attrId" jdbcType="BIGINT" />
    <result column="index_key" property="indexKey" jdbcType="VARCHAR" />
    <result column="created" property="created" jdbcType="TIMESTAMP" />
    <result column="modified" property="modified" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    value_id, value_name, attr_id, index_key, created, modified, status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from item_attribute_value
    where value_id = #{valueId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from item_attribute_value
    where value_id = #{valueId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.tg.citySite.model.ItemAttrValue" >
    insert into item_attribute_value (value_id, value_name, attr_id, 
      index_key, created, modified, 
      status)
    values (#{valueId,jdbcType=BIGINT}, #{valueName,jdbcType=VARCHAR}, #{attrId,jdbcType=BIGINT}, 
      #{indexKey,jdbcType=VARCHAR}, #{created,jdbcType=TIMESTAMP}, #{modified,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.tg.citySite.model.ItemAttrValue" >
    insert into item_attribute_value
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="valueId != null" >
        value_id,
      </if>
      <if test="valueName != null" >
        value_name,
      </if>
      <if test="attrId != null" >
        attr_id,
      </if>
      <if test="indexKey != null" >
        index_key,
      </if>
      <if test="created != null" >
        created,
      </if>
      <if test="modified != null" >
        modified,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="valueId != null" >
        #{valueId,jdbcType=BIGINT},
      </if>
      <if test="valueName != null" >
        #{valueName,jdbcType=VARCHAR},
      </if>
      <if test="attrId != null" >
        #{attrId,jdbcType=BIGINT},
      </if>
      <if test="indexKey != null" >
        #{indexKey,jdbcType=VARCHAR},
      </if>
      <if test="created != null" >
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="modified != null" >
        #{modified,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tg.citySite.model.ItemAttrValue" >
    update item_attribute_value
    <set >
      <if test="valueName != null" >
        value_name = #{valueName,jdbcType=VARCHAR},
      </if>
      <if test="attrId != null" >
        attr_id = #{attrId,jdbcType=BIGINT},
      </if>
      <if test="indexKey != null" >
        index_key = #{indexKey,jdbcType=VARCHAR},
      </if>
      <if test="created != null" >
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="modified != null" >
        modified = #{modified,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where value_id = #{valueId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tg.citySite.model.ItemAttrValue" >
    update item_attribute_value
    set value_name = #{valueName,jdbcType=VARCHAR},
      attr_id = #{attrId,jdbcType=BIGINT},
      index_key = #{indexKey,jdbcType=VARCHAR},
      created = #{created,jdbcType=TIMESTAMP},
      modified = #{modified,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER}
    where value_id = #{valueId,jdbcType=BIGINT}
  </update>
</mapper>